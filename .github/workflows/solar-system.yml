name: Solar System Workflow

env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
    
jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        container:
          image: node:20
            
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

#        - name: Setup NodeJS Version
#          uses: actions/setup-node@v4
#          with:
#            node-version: 20
    
        - name: Install Dependencies
          run: npm install

        - name: Cache NPM dependencies
          uses: actions/cache@v4.2.3
          with:
            path: ~/.npm
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
      name: Code Coverage Job
      runs-on: [ubuntu-latest]
      steps:
        - name: Checkout Repo
          uses: actions/checkout@v4

        - name: Setup NodeJS
          uses: actions/setup-node@v4
          with: 
            node-version: 18

        - name: Install NodeJS dependencies
          run: npm install

        - name: Run code-coverage
          run: npm run coverage
          continue-on-error: true
        
        - name: Upload Code Coverage Result
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5

    docker:
      runs-on: ubuntu-latest
      needs: [unit-testing, code-coverage]
      permissions:
        packages: write
      steps:
        - name: Checkout the repo
          uses: actions/checkout@v4

        - name: Container Registry Login
          uses: docker/login-action@v3.4.0
          with:
            registry: ghcr.io
            username: ${{ github.repository_owner }}
            password: ${{ secrets.GITHUB_TOKEN }}
          
        - name: Docker build & push
          uses: docker/build-push-action@v6.18.0
          with:
            context: .
            push: true
            tags: 'ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}'

    dev-deploy:
      runs-on: ubuntu-latest
      needs: docker
      environment:
        name: development
      steps:
        - uses: actions/checkout@v4
        - uses: azure/setup-kubectl@v4
          with:
            version: 'v1.28.1'
        - uses: azure/k8s-set-context@v3
          with:
            method: kubeconfig
            kubeconfig: '${{ secrets.KUBECONFIG }}'
        - run: kubectl version -o yaml
        - run: echo "INGRESS_IP=$(kubectl -n ingress-nginx get services ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[0].ip}')" >> $GITHUB_ENV
        - uses: cschleiden/replace-tokens@v1.3
          with:
            tokenPrefix: '_{_'
            tokenSuffix: '_}_'
            files: '["kubernetes/development/*.yaml"]'
          env:
            NAMESPACE: ${{ env.NAMESPACE }}
            REPLICAS: ${{ env.REPLICAS }}
            IMAGE: ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}
            INGRESS_IP: ${{ env.INGRESS_IP }}
        - run: cat kubernetes/development/*.yaml
